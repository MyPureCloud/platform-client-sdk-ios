import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let knowledgeBaseId: String = "" // Knowledge base ID
let languageCode: GetKnowledgeKnowledgebaseLanguageTrainingsRequest.LanguageCode_getKnowledgeKnowledgebaseLanguageTrainings = GetKnowledgeKnowledgebaseLanguageTrainingsRequest.LanguageCode_getKnowledgeKnowledgebaseLanguageTrainings.enummember // Language code, format: iso2-LOCALE
let before: String = "" // The cursor that points to the start of the set of entities that has been returned.
let after: String = "" // The cursor that points to the end of the set of entities that has been returned.
let limit: String = "" // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize, use CursorQueryParameters instead.
let pageSize: String = "" // Number of entities to return. Maximum of 200.
let knowledgeDocumentsState: GetKnowledgeKnowledgebaseLanguageTrainingsRequest.KnowledgeDocumentsState_getKnowledgeKnowledgebaseLanguageTrainings = GetKnowledgeKnowledgebaseLanguageTrainingsRequest.KnowledgeDocumentsState_getKnowledgeKnowledgebaseLanguageTrainings.enummember // Return the training with the specified state of the trained documents.

// Code example
GetKnowledgeKnowledgebaseLanguageTrainingsRequest.getKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId: knowledgeBaseId, languageCode: languageCode, before: before, after: after, limit: limit, pageSize: pageSize, knowledgeDocumentsState: knowledgeDocumentsState) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetKnowledgeKnowledgebaseLanguageTrainingsRequest.getKnowledgeKnowledgebaseLanguageTrainings was successful")
        dump(response)
    }
}