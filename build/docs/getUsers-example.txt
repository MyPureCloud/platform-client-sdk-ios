import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let pageSize: Int = 25 // Page size
let pageNumber: Int = 1 // Page number
let _id: [String] = [""] // A list of user IDs to fetch by bulk
let jabberId: [String] = [""] // A list of jabberIds to fetch by bulk (cannot be used with the \"id\" parameter)
let sortOrder: GetUsersRequest.SortOrder_getUsers = GetUsersRequest.SortOrder_getUsers.enummember // Ascending or descending sort order
let expand: [String] = [GetUsersRequest.Expand_getUsers.enummember.rawValue] // Which fields, if any, to expand
let integrationPresenceSource: GetUsersRequest.IntegrationPresenceSource_getUsers = GetUsersRequest.IntegrationPresenceSource_getUsers.enummember // Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \"expand\". When using this parameter the maximum number of users that can be returned is 100.
let state: GetUsersRequest.State_getUsers = GetUsersRequest.State_getUsers.enummember // Only list users of this state

// Code example
GetUsersRequest.getUsers(pageSize: pageSize, pageNumber: pageNumber, _id: _id, jabberId: jabberId, sortOrder: sortOrder, expand: expand, integrationPresenceSource: integrationPresenceSource, state: state) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetUsersRequest.getUsers was successful")
        dump(response)
    }
}