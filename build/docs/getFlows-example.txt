import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let type: [String] = [GetFlowsRequest.ModelType_getFlows.enummember.rawValue] // Type
let pageNumber: Int = 1 // Page number
let pageSize: Int = 25 // Page size
let sortBy: String = "id" // Sort by
let sortOrder: String = "asc" // Sort order
let _id: [String] = [""] // ID
let name: String = "" // Name
let _description: String = "" // Description
let nameOrDescription: String = "" // Name or description
let publishVersionId: String = "" // Publish version ID
let editableBy: String = "" // Editable by
let lockedBy: String = "" // Locked by
let lockedByClientId: String = "" // Locked by client ID
let secure: GetFlowsRequest.Secure_getFlows = GetFlowsRequest.Secure_getFlows.enummember // Secure
let deleted: Bool = false // Include deleted
let includeSchemas: Bool = false // Include variable schemas
let publishedAfter: String = "" // Published after
let publishedBefore: String = "" // Published before
let divisionId: [String] = [""] // division ID(s)

// Code example
GetFlowsRequest.getFlows(type: type, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, _id: _id, name: name, _description: _description, nameOrDescription: nameOrDescription, publishVersionId: publishVersionId, editableBy: editableBy, lockedBy: lockedBy, lockedByClientId: lockedByClientId, secure: secure, deleted: deleted, includeSchemas: includeSchemas, publishedAfter: publishedAfter, publishedBefore: publishedBefore, divisionId: divisionId) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetFlowsRequest.getFlows was successful")
        dump(response)
    }
}