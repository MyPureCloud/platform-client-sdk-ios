import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let nextPage: String = "" // The key for listing the next page
let pageSize: Int = 20 // The page size for the listing
let state: GetSpeechandtextanalyticsTopicsRequest.State_getSpeechandtextanalyticsTopics = GetSpeechandtextanalyticsTopicsRequest.State_getSpeechandtextanalyticsTopics.enummember // Topic state. Defaults to latest
let name: String = "" // Case insensitive partial name to filter by
let ids: [String] = [""] // Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed.
let sortBy: GetSpeechandtextanalyticsTopicsRequest.SortBy_getSpeechandtextanalyticsTopics = GetSpeechandtextanalyticsTopicsRequest.SortBy_getSpeechandtextanalyticsTopics.enummember // Sort results by. Defaults to name
let sortOrder: GetSpeechandtextanalyticsTopicsRequest.SortOrder_getSpeechandtextanalyticsTopics = GetSpeechandtextanalyticsTopicsRequest.SortOrder_getSpeechandtextanalyticsTopics.enummember // Sort order. Defaults to asc

// Code example
GetSpeechandtextanalyticsTopicsRequest.getSpeechandtextanalyticsTopics(nextPage: nextPage, pageSize: pageSize, state: state, name: name, ids: ids, sortBy: sortBy, sortOrder: sortOrder) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetSpeechandtextanalyticsTopicsRequest.getSpeechandtextanalyticsTopics was successful")
        dump(response)
    }
}