{
    "DELETE /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "deleteanalyticsconversationsdetailsjob",
        "functionName": "deleteAnalyticsConversationsDetailsJob",
        "signature": "deleteAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "deleteanalyticsreportingschedule",
        "functionName": "deleteAnalyticsReportingSchedule",
        "signature": "deleteAnalyticsReportingSchedule(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "DELETE /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "deleteanalyticsusersdetailsjob",
        "functionName": "deleteAnalyticsUsersDetailsJob",
        "signature": "deleteAnalyticsUsersDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ]
    },
    "GET /api/v2/analytics/botflows/{botFlowId}/reportingturns": {
        "operationId": "getanalyticsbotflowreportingturns",
        "functionName": "getAnalyticsBotflowReportingturns",
        "signature": "getAnalyticsBotflowReportingturns(botFlowId, after, pageSize, interval, actionId, sessionId, language, askActionResults)",
        "parameters": [
            {
                "name": "botFlowId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "after",
                "type": "String",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "String",
                "required": "false"
            },
            {
                "name": "interval",
                "type": "String",
                "required": "false"
            },
            {
                "name": "actionId",
                "type": "String",
                "required": "false"
            },
            {
                "name": "sessionId",
                "type": "String",
                "required": "false"
            },
            {
                "name": "language",
                "type": "String",
                "required": "false"
            },
            {
                "name": "askActionResults",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ReportingTurnsResponse"
    },
    "GET /api/v2/analytics/conversations/{conversationId}/details": {
        "operationId": "getanalyticsconversationdetails",
        "functionName": "getAnalyticsConversationDetails",
        "signature": "getAnalyticsConversationDetails(conversationId)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "AnalyticsConversationWithoutAttributes"
    },
    "GET /api/v2/analytics/conversations/details": {
        "operationId": "getanalyticsconversationsdetails",
        "functionName": "getAnalyticsConversationsDetails",
        "signature": "getAnalyticsConversationsDetails(_id)",
        "parameters": [
            {
                "name": "_id",
                "type": "[String]",
                "required": "false"
            }
        ],
        "return": "AnalyticsConversationWithoutAttributesMultiGetResponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}": {
        "operationId": "getanalyticsconversationsdetailsjob",
        "functionName": "getAnalyticsConversationsDetailsJob",
        "signature": "getAnalyticsConversationsDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "AsyncQueryStatus"
    },
    "GET /api/v2/analytics/conversations/details/jobs/{jobId}/results": {
        "operationId": "getanalyticsconversationsdetailsjobresults",
        "functionName": "getAnalyticsConversationsDetailsJobResults",
        "signature": "getAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "String",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            }
        ],
        "return": "AnalyticsConversationAsyncQueryResponse"
    },
    "GET /api/v2/analytics/conversations/details/jobs/availability": {
        "operationId": "getanalyticsconversationsdetailsjobsavailability",
        "functionName": "getAnalyticsConversationsDetailsJobsAvailability",
        "signature": "getAnalyticsConversationsDetailsJobsAvailability()",
        
        "return": "DataAvailabilityResponse"
    },
    "GET /api/v2/analytics/dataretention/settings": {
        "operationId": "getanalyticsdataretentionsettings",
        "functionName": "getAnalyticsDataretentionSettings",
        "signature": "getAnalyticsDataretentionSettings()",
        
        "return": "AnalyticsDataRetentionResponse"
    },
    "GET /api/v2/analytics/reporting/exports": {
        "operationId": "getanalyticsreportingexports",
        "functionName": "getAnalyticsReportingExports",
        "signature": "getAnalyticsReportingExports(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            }
        ],
        "return": "ReportingExportJobListing"
    },
    "GET /api/v2/analytics/reporting/exports/metadata": {
        "operationId": "getanalyticsreportingexportsmetadata",
        "functionName": "getAnalyticsReportingExportsMetadata",
        "signature": "getAnalyticsReportingExportsMetadata()",
        
        "return": "ReportingExportMetadataJobListing"
    },
    "GET /api/v2/analytics/reporting/metadata": {
        "operationId": "getanalyticsreportingmetadata",
        "functionName": "getAnalyticsReportingMetadata",
        "signature": "getAnalyticsReportingMetadata(pageNumber, pageSize, locale)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            },
            {
                "name": "locale",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ReportMetaDataEntityListing"
    },
    "GET /api/v2/analytics/reporting/{reportId}/metadata": {
        "operationId": "getanalyticsreportingreportidmetadata",
        "functionName": "getAnalyticsReportingReportIdMetadata",
        "signature": "getAnalyticsReportingReportIdMetadata(reportId, locale)",
        "parameters": [
            {
                "name": "reportId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "locale",
                "type": "String",
                "required": "false"
            }
        ],
        "return": "ReportMetaData"
    },
    "GET /api/v2/analytics/reporting/reportformats": {
        "operationId": "getanalyticsreportingreportformats",
        "functionName": "getAnalyticsReportingReportformats",
        "signature": "getAnalyticsReportingReportformats()",
        
        "return": "[String]"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "getanalyticsreportingschedule",
        "functionName": "getAnalyticsReportingSchedule",
        "signature": "getAnalyticsReportingSchedule(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "ReportSchedule"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history": {
        "operationId": "getanalyticsreportingschedulehistory",
        "functionName": "getAnalyticsReportingScheduleHistory",
        "signature": "getAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "pageNumber",
                "type": "Int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            }
        ],
        "return": "ReportRunEntryEntityDomainListing"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/latest": {
        "operationId": "getanalyticsreportingschedulehistorylatest",
        "functionName": "getAnalyticsReportingScheduleHistoryLatest",
        "signature": "getAnalyticsReportingScheduleHistoryLatest(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "ReportRunEntry"
    },
    "GET /api/v2/analytics/reporting/schedules/{scheduleId}/history/{runId}": {
        "operationId": "getanalyticsreportingschedulehistoryrunid",
        "functionName": "getAnalyticsReportingScheduleHistoryRunId",
        "signature": "getAnalyticsReportingScheduleHistoryRunId(runId, scheduleId)",
        "parameters": [
            {
                "name": "runId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "ReportRunEntry"
    },
    "GET /api/v2/analytics/reporting/schedules": {
        "operationId": "getanalyticsreportingschedules",
        "functionName": "getAnalyticsReportingSchedules",
        "signature": "getAnalyticsReportingSchedules(pageNumber, pageSize)",
        "parameters": [
            {
                "name": "pageNumber",
                "type": "Int",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            }
        ],
        "return": "ReportScheduleEntityListing"
    },
    "GET /api/v2/analytics/reporting/settings": {
        "operationId": "getanalyticsreportingsettings",
        "functionName": "getAnalyticsReportingSettings",
        "signature": "getAnalyticsReportingSettings()",
        
        "return": "AnalyticsReportingSettings"
    },
    "GET /api/v2/analytics/reporting/timeperiods": {
        "operationId": "getanalyticsreportingtimeperiods",
        "functionName": "getAnalyticsReportingTimeperiods",
        "signature": "getAnalyticsReportingTimeperiods()",
        
        "return": "[String]"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}": {
        "operationId": "getanalyticsusersdetailsjob",
        "functionName": "getAnalyticsUsersDetailsJob",
        "signature": "getAnalyticsUsersDetailsJob(jobId)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "AsyncQueryStatus"
    },
    "GET /api/v2/analytics/users/details/jobs/{jobId}/results": {
        "operationId": "getanalyticsusersdetailsjobresults",
        "functionName": "getAnalyticsUsersDetailsJobResults",
        "signature": "getAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize)",
        "parameters": [
            {
                "name": "jobId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "cursor",
                "type": "String",
                "required": "false"
            },
            {
                "name": "pageSize",
                "type": "Int",
                "required": "false"
            }
        ],
        "return": "AnalyticsUserDetailsAsyncQueryResponse"
    },
    "GET /api/v2/analytics/users/details/jobs/availability": {
        "operationId": "getanalyticsusersdetailsjobsavailability",
        "functionName": "getAnalyticsUsersDetailsJobsAvailability",
        "signature": "getAnalyticsUsersDetailsJobsAvailability()",
        
        "return": "DataAvailabilityResponse"
    },
    "PATCH /api/v2/analytics/reporting/settings": {
        "operationId": "patchanalyticsreportingsettings",
        "functionName": "patchAnalyticsReportingSettings",
        "signature": "patchAnalyticsReportingSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "AnalyticsReportingSettings",
                "required": "true"
            }
        ],
        "return": "AnalyticsReportingSettings"
    },
    "POST /api/v2/analytics/actions/aggregates/query": {
        "operationId": "postanalyticsactionsaggregatesquery",
        "functionName": "postAnalyticsActionsAggregatesQuery",
        "signature": "postAnalyticsActionsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ActionAggregationQuery",
                "required": "true"
            }
        ],
        "return": "ActionAggregateQueryResponse"
    },
    "POST /api/v2/analytics/bots/aggregates/query": {
        "operationId": "postanalyticsbotsaggregatesquery",
        "functionName": "postAnalyticsBotsAggregatesQuery",
        "signature": "postAnalyticsBotsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "BotAggregationQuery",
                "required": "true"
            }
        ],
        "return": "BotAggregateQueryResponse"
    },
    "POST /api/v2/analytics/conversations/{conversationId}/details/properties": {
        "operationId": "postanalyticsconversationdetailsproperties",
        "functionName": "postAnalyticsConversationDetailsProperties",
        "signature": "postAnalyticsConversationDetailsProperties(conversationId, body)",
        "parameters": [
            {
                "name": "conversationId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "PropertyIndexRequest",
                "required": "true"
            }
        ],
        "return": "PropertyIndexRequest"
    },
    "POST /api/v2/analytics/conversations/aggregates/query": {
        "operationId": "postanalyticsconversationsaggregatesquery",
        "functionName": "postAnalyticsConversationsAggregatesQuery",
        "signature": "postAnalyticsConversationsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ConversationAggregationQuery",
                "required": "true"
            }
        ],
        "return": "ConversationAggregateQueryResponse"
    },
    "POST /api/v2/analytics/conversations/details/jobs": {
        "operationId": "postanalyticsconversationsdetailsjobs",
        "functionName": "postAnalyticsConversationsDetailsJobs",
        "signature": "postAnalyticsConversationsDetailsJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "AsyncConversationQuery",
                "required": "true"
            }
        ],
        "return": "AsyncQueryResponse"
    },
    "POST /api/v2/analytics/conversations/details/query": {
        "operationId": "postanalyticsconversationsdetailsquery",
        "functionName": "postAnalyticsConversationsDetailsQuery",
        "signature": "postAnalyticsConversationsDetailsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ConversationQuery",
                "required": "true"
            }
        ],
        "return": "AnalyticsConversationQueryResponse"
    },
    "POST /api/v2/analytics/conversations/transcripts/query": {
        "operationId": "postanalyticsconversationstranscriptsquery",
        "functionName": "postAnalyticsConversationsTranscriptsQuery",
        "signature": "postAnalyticsConversationsTranscriptsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "TranscriptConversationDetailSearchRequest",
                "required": "true"
            }
        ],
        "return": "AnalyticsConversationWithoutAttributesMultiGetResponse"
    },
    "POST /api/v2/analytics/evaluations/aggregates/query": {
        "operationId": "postanalyticsevaluationsaggregatesquery",
        "functionName": "postAnalyticsEvaluationsAggregatesQuery",
        "signature": "postAnalyticsEvaluationsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "EvaluationAggregationQuery",
                "required": "true"
            }
        ],
        "return": "EvaluationAggregateQueryResponse"
    },
    "POST /api/v2/analytics/flows/aggregates/query": {
        "operationId": "postanalyticsflowsaggregatesquery",
        "functionName": "postAnalyticsFlowsAggregatesQuery",
        "signature": "postAnalyticsFlowsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "FlowAggregationQuery",
                "required": "true"
            }
        ],
        "return": "FlowAggregateQueryResponse"
    },
    "POST /api/v2/analytics/flows/observations/query": {
        "operationId": "postanalyticsflowsobservationsquery",
        "functionName": "postAnalyticsFlowsObservationsQuery",
        "signature": "postAnalyticsFlowsObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "FlowObservationQuery",
                "required": "true"
            }
        ],
        "return": "FlowObservationQueryResponse"
    },
    "POST /api/v2/analytics/journeys/aggregates/query": {
        "operationId": "postanalyticsjourneysaggregatesquery",
        "functionName": "postAnalyticsJourneysAggregatesQuery",
        "signature": "postAnalyticsJourneysAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "JourneyAggregationQuery",
                "required": "true"
            }
        ],
        "return": "JourneyAggregateQueryResponse"
    },
    "POST /api/v2/analytics/queues/observations/query": {
        "operationId": "postanalyticsqueuesobservationsquery",
        "functionName": "postAnalyticsQueuesObservationsQuery",
        "signature": "postAnalyticsQueuesObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "QueueObservationQuery",
                "required": "true"
            }
        ],
        "return": "QueueObservationQueryResponse"
    },
    "POST /api/v2/analytics/reporting/exports": {
        "operationId": "postanalyticsreportingexports",
        "functionName": "postAnalyticsReportingExports",
        "signature": "postAnalyticsReportingExports(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ReportingExportJobRequest",
                "required": "true"
            }
        ],
        "return": "ReportingExportJobResponse"
    },
    "POST /api/v2/analytics/reporting/schedules/{scheduleId}/runreport": {
        "operationId": "postanalyticsreportingschedulerunreport",
        "functionName": "postAnalyticsReportingScheduleRunreport",
        "signature": "postAnalyticsReportingScheduleRunreport(scheduleId)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            }
        ],
        "return": "RunNowResponse"
    },
    "POST /api/v2/analytics/reporting/schedules": {
        "operationId": "postanalyticsreportingschedules",
        "functionName": "postAnalyticsReportingSchedules",
        "signature": "postAnalyticsReportingSchedules(body)",
        "parameters": [
            {
                "name": "body",
                "type": "ReportSchedule",
                "required": "true"
            }
        ],
        "return": "ReportSchedule"
    },
    "POST /api/v2/analytics/surveys/aggregates/query": {
        "operationId": "postanalyticssurveysaggregatesquery",
        "functionName": "postAnalyticsSurveysAggregatesQuery",
        "signature": "postAnalyticsSurveysAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "SurveyAggregationQuery",
                "required": "true"
            }
        ],
        "return": "SurveyAggregateQueryResponse"
    },
    "POST /api/v2/analytics/transcripts/aggregates/query": {
        "operationId": "postanalyticstranscriptsaggregatesquery",
        "functionName": "postAnalyticsTranscriptsAggregatesQuery",
        "signature": "postAnalyticsTranscriptsAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "TranscriptAggregationQuery",
                "required": "true"
            }
        ],
        "return": "TranscriptAggregateQueryResponse"
    },
    "POST /api/v2/analytics/users/aggregates/query": {
        "operationId": "postanalyticsusersaggregatesquery",
        "functionName": "postAnalyticsUsersAggregatesQuery",
        "signature": "postAnalyticsUsersAggregatesQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserAggregationQuery",
                "required": "true"
            }
        ],
        "return": "UserAggregateQueryResponse"
    },
    "POST /api/v2/analytics/users/details/jobs": {
        "operationId": "postanalyticsusersdetailsjobs",
        "functionName": "postAnalyticsUsersDetailsJobs",
        "signature": "postAnalyticsUsersDetailsJobs(body)",
        "parameters": [
            {
                "name": "body",
                "type": "AsyncUserDetailsQuery",
                "required": "true"
            }
        ],
        "return": "AsyncQueryResponse"
    },
    "POST /api/v2/analytics/users/details/query": {
        "operationId": "postanalyticsusersdetailsquery",
        "functionName": "postAnalyticsUsersDetailsQuery",
        "signature": "postAnalyticsUsersDetailsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserDetailsQuery",
                "required": "true"
            }
        ],
        "return": "AnalyticsUserDetailsQueryResponse"
    },
    "POST /api/v2/analytics/users/observations/query": {
        "operationId": "postanalyticsusersobservationsquery",
        "functionName": "postAnalyticsUsersObservationsQuery",
        "signature": "postAnalyticsUsersObservationsQuery(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UserObservationQuery",
                "required": "true"
            }
        ],
        "return": "UserObservationQueryResponse"
    },
    "PUT /api/v2/analytics/dataretention/settings": {
        "operationId": "putanalyticsdataretentionsettings",
        "functionName": "putAnalyticsDataretentionSettings",
        "signature": "putAnalyticsDataretentionSettings(body)",
        "parameters": [
            {
                "name": "body",
                "type": "UpdateAnalyticsDataRetentionRequest",
                "required": "true"
            }
        ],
        "return": "AnalyticsDataRetentionResponse"
    },
    "PUT /api/v2/analytics/reporting/schedules/{scheduleId}": {
        "operationId": "putanalyticsreportingschedule",
        "functionName": "putAnalyticsReportingSchedule",
        "signature": "putAnalyticsReportingSchedule(scheduleId, body)",
        "parameters": [
            {
                "name": "scheduleId",
                "type": "String",
                "required": "true"
            },
            {
                "name": "body",
                "type": "ReportSchedule",
                "required": "true"
            }
        ],
        "return": "ReportSchedule"
    }
    
}