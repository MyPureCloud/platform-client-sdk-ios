import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let before: String = "" // The cursor that points to the start of the set of entities that has been returned.
let after: String = "" // The cursor that points to the end of the set of entities that has been returned.
let limit: String = "" // Number of entities to return. Maximum of 200. Deprecated in favour of pageSize, use CursorQueryParameters instead.
let pageSize: String = "" // Number of entities to return. Maximum of 200.
let name: String = "" // Filter by Name.
let coreLanguage: GetKnowledgeKnowledgebasesRequest.CoreLanguage_getKnowledgeKnowledgebases = GetKnowledgeKnowledgebasesRequest.CoreLanguage_getKnowledgeKnowledgebases.enummember // Filter by core language.
let published: Bool = true // Filter by published status.
let sortBy: GetKnowledgeKnowledgebasesRequest.SortBy_getKnowledgeKnowledgebases = GetKnowledgeKnowledgebasesRequest.SortBy_getKnowledgeKnowledgebases.enummember // Sort by.
let sortOrder: GetKnowledgeKnowledgebasesRequest.SortOrder_getKnowledgeKnowledgebases = GetKnowledgeKnowledgebasesRequest.SortOrder_getKnowledgeKnowledgebases.enummember // Sort Order.

// Code example
GetKnowledgeKnowledgebasesRequest.getKnowledgeKnowledgebases(before: before, after: after, limit: limit, pageSize: pageSize, name: name, coreLanguage: coreLanguage, published: published, sortBy: sortBy, sortOrder: sortOrder) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetKnowledgeKnowledgebasesRequest.getKnowledgeKnowledgebases was successful")
        dump(response)
    }
}