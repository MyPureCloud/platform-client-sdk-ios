import PureCloudPlatformClientV2

PureCloudPlatformClientV2API.basePath = "" // expected format: "https://api.[base path]"
PureCloudPlatformClientV2API.accessToken = "your_access_token"

let knowledgeBaseId: String = "" // Knowledge base ID
let before: String = "" // The cursor that points to the start of the set of entities that has been returned.
let after: String = "" // The cursor that points to the end of the set of entities that has been returned.
let pageSize: String = "" // Number of entities to return. Maximum of 200.
let interval: String = "" // Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ
let documentId: [String] = [""] // Retrieves the specified documents, comma separated values expected.
let categoryId: [String] = [""] // If specified, retrieves documents associated with category ids, comma separated values expected.
let includeSubcategories: Bool = true // Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories.
let includeDrafts: Bool = true // If includeDrafts is true, Documents in the draft state are also returned in the response.
let labelIds: [String] = [""] // If specified, retrieves documents associated with label ids, comma separated values expected.
let expand: [String] = [""] // The specified entity attributes will be filled. Comma separated values expected.
let externalIds: [String] = [""] // If specified, retrieves documents associated with external ids, comma separated values expected.

// Get documents.
GetKnowledgeKnowledgebaseDocumentsRequest.getKnowledgeKnowledgebaseDocuments(knowledgeBaseId: knowledgeBaseId, before: before, after: after, pageSize: pageSize, interval: interval, documentId: documentId, categoryId: categoryId, includeSubcategories: includeSubcategories, includeDrafts: includeDrafts, labelIds: labelIds, expand: expand, externalIds: externalIds) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetKnowledgeKnowledgebaseDocumentsRequest.getKnowledgeKnowledgebaseDocuments was successful")
        dump(response)
    }
}