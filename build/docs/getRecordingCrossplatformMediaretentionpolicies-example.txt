import PureCloudPlatformClientV2

PureCloudPlatformClientV2API.basePath = "" // expected format: "https://api.[base path]"
PureCloudPlatformClientV2API.accessToken = "your_access_token"

let pageSize: Int = 0 // The total page size requested
let pageNumber: Int = 0 // The page number requested
let sortBy: String = "" // variable name requested to sort by
let expand: [String] = [""] // variable name requested by expand list
let nextPage: String = "" // next page token
let previousPage: String = "" // Previous page token
let name: String = "" // the policy name - used for filtering results in searches.
let enabled: Bool = true // checks to see if policy is enabled - use enabled = true or enabled = false
let summary: Bool = true // provides a less verbose response of policy lists.
let hasErrors: Bool = true // provides a way to fetch all policies with errors or policies that do not have errors
let deleteDaysThreshold: Int = 0 // provides a way to fetch all policies with any actions having deleteDays exceeding the provided value

// Gets media retention policy list with query options to filter on name and enabled.
GetRecordingCrossplatformMediaretentionpoliciesRequest.getRecordingCrossplatformMediaretentionpolicies(pageSize: pageSize, pageNumber: pageNumber, sortBy: sortBy, expand: expand, nextPage: nextPage, previousPage: previousPage, name: name, enabled: enabled, summary: summary, hasErrors: hasErrors, deleteDaysThreshold: deleteDaysThreshold) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetRecordingCrossplatformMediaretentionpoliciesRequest.getRecordingCrossplatformMediaretentionpolicies was successful")
        dump(response)
    }
}