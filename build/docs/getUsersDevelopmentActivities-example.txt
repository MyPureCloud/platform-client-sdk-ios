import PureCloudPlatformClientV2

PureCloudPlatformClientV2API.basePath = "" // expected format: "https://api.[base path]"
PureCloudPlatformClientV2API.accessToken = "your_access_token"

let userId: [String] = [""] // Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId.
let moduleId: String = "" // Specifies the ID of the learning module.
let interval: String = "" // Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
let completionInterval: String = "" // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
let overdue: GetUsersDevelopmentActivitiesRequest.Overdue_getUsersDevelopmentActivities = GetUsersDevelopmentActivitiesRequest.Overdue_getUsersDevelopmentActivities.enummember // Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned
let pass: GetUsersDevelopmentActivitiesRequest.Pass_getUsersDevelopmentActivities = GetUsersDevelopmentActivitiesRequest.Pass_getUsersDevelopmentActivities.enummember // Specifies if only the failed (pass is \"False\") or passed (pass is \"True\") activities are returned. If pass is \"Any\" or if the pass parameter is not supplied, all activities are returned
let pageSize: Int = 0 // Page size
let pageNumber: Int = 0 // Page number
let sortOrder: GetUsersDevelopmentActivitiesRequest.SortOrder_getUsersDevelopmentActivities = GetUsersDevelopmentActivitiesRequest.SortOrder_getUsersDevelopmentActivities.enummember // Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc)
let types: [String] = [""] // Specifies the activity types.
let statuses: [String] = [""] // Specifies the activity statuses to filter by
let relationship: [String] = [""] // Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.

// Get list of Development Activities
GetUsersDevelopmentActivitiesRequest.getUsersDevelopmentActivities(userId: userId, moduleId: moduleId, interval: interval, completionInterval: completionInterval, overdue: overdue, pass: pass, pageSize: pageSize, pageNumber: pageNumber, sortOrder: sortOrder, types: types, statuses: statuses, relationship: relationship) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetUsersDevelopmentActivitiesRequest.getUsersDevelopmentActivities was successful")
        dump(response)
    }
}