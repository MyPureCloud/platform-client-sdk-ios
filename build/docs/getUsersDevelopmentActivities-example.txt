import 

API.basePath = ""
API.accessToken = "cwRto9ScT..."

let userId: [String] = [""] // Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId.
let moduleId: String = "" // Specifies the ID of the learning module.
let interval: String = "" // Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
let completionInterval: String = "" // Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
let overdue: GetUsersDevelopmentActivitiesRequest.Overdue_getUsersDevelopmentActivities = GetUsersDevelopmentActivitiesRequest.Overdue_getUsersDevelopmentActivities.enummember // Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned
let pageSize: Int = 25 // Page size
let pageNumber: Int = 1 // Page number
let sortOrder: GetUsersDevelopmentActivitiesRequest.SortOrder_getUsersDevelopmentActivities = GetUsersDevelopmentActivitiesRequest.SortOrder_getUsersDevelopmentActivities.enummember // Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc)
let types: [String] = [GetUsersDevelopmentActivitiesRequest.Types_getUsersDevelopmentActivities.enummember.rawValue] // Specifies the activity types.
let statuses: [String] = [GetUsersDevelopmentActivitiesRequest.Statuses_getUsersDevelopmentActivities.enummember.rawValue] // Specifies the activity statuses to filter by
let relationship: [String] = [GetUsersDevelopmentActivitiesRequest.Relationship_getUsersDevelopmentActivities.enummember.rawValue] // Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied.

// Code example
GetUsersDevelopmentActivitiesRequest.getUsersDevelopmentActivities(userId: userId, moduleId: moduleId, interval: interval, completionInterval: completionInterval, overdue: overdue, pageSize: pageSize, pageNumber: pageNumber, sortOrder: sortOrder, types: types, statuses: statuses, relationship: relationship) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetUsersDevelopmentActivitiesRequest.getUsersDevelopmentActivities was successful")
        dump(response)
    }
}