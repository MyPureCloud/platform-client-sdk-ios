import PureCloudPlatformClientV2

PureCloudPlatformClientV2API.basePath = "" // expected format: "https://api.[base path]"
PureCloudPlatformClientV2API.accessToken = "your_access_token"

let expand: GetFlowsDatatablesDivisionviewsRequest.Expand_getFlowsDatatablesDivisionviews = GetFlowsDatatablesDivisionviewsRequest.Expand_getFlowsDatatablesDivisionviews.enummember // Expand instructions for the result
let pageNumber: Int = 0 // Page number
let pageSize: Int = 0 // Page size
let sortBy: GetFlowsDatatablesDivisionviewsRequest.SortBy_getFlowsDatatablesDivisionviews = GetFlowsDatatablesDivisionviewsRequest.SortBy_getFlowsDatatablesDivisionviews.enummember // Sort by
let sortOrder: String = "" // Sort order
let divisionId: [String] = [""] // division ID(s)
let name: String = exactMatch, beginsWith*, *endsWith, *contains* // Filter by Name. The wildcard character * is supported within the filter. Matches are case-insensitive.

// Retrieve a list of datatables for the org
GetFlowsDatatablesDivisionviewsRequest.getFlowsDatatablesDivisionviews(expand: expand, pageNumber: pageNumber, pageSize: pageSize, sortBy: sortBy, sortOrder: sortOrder, divisionId: divisionId, name: name) { (response, error) in
    if let error = error {
        dump(error)
    } else if let response = response {
        print("GetFlowsDatatablesDivisionviewsRequest.getFlowsDatatablesDivisionviews was successful")
        dump(response)
    }
}