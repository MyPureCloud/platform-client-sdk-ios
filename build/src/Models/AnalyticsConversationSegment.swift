//
// AnalyticsConversationSegment.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class AnalyticsConversationSegment: Codable {

    public enum DisconnectType: String, Codable { 
        case endpoint = "endpoint"
        case client = "client"
        case system = "system"
        case transfer = "transfer"
        case error = "error"
        case peer = "peer"
        case other = "other"
        case spam = "spam"
        case transportfailure = "transportFailure"
        case conferencetransfer = "conferenceTransfer"
        case consulttransfer = "consultTransfer"
        case forwardtransfer = "forwardTransfer"
        case timeout = "timeout"
        case noanswertransfer = "noAnswerTransfer"
        case notavailabletransfer = "notAvailableTransfer"
        case uncallable = "uncallable"
    }
    public enum SegmentType: String, Codable { 
        case unknown = "unknown"
        case alert = "alert"
        case system = "system"
        case delay = "delay"
        case hold = "hold"
        case interact = "interact"
        case ivr = "ivr"
        case dialing = "dialing"
        case wrapup = "wrapup"
        case voicemail = "voicemail"
        case scheduled = "scheduled"
        case contacting = "contacting"
        case transmitting = "transmitting"
        case converting = "converting"
        case uploading = "uploading"
        case sharing = "sharing"
        case callback = "callback"
    }
    /** The timestamp when this segment began. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z */
    public var segmentStart: Date?
    /** The timestamp when this segment ended. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z */
    public var segmentEnd: Date?
    /** Queue identifier */
    public var queueId: String?
    /** Wrapup Code id */
    public var wrapUpCode: String?
    /** Note entered by an agent during after-call work */
    public var wrapUpNote: String?
    public var wrapUpTags: [String]?
    public var errorCode: String?
    /** A description of the event that disconnected the segment */
    public var disconnectType: DisconnectType?
    /** The activity taking place for the participant in the segment */
    public var segmentType: SegmentType?
    public var requestedRoutingUserIds: [String]?
    public var requestedRoutingSkillIds: [String]?
    /** A unique identifier for the language requested for an interaction. */
    public var requestedLanguageId: String?
    public var scoredAgents: [AnalyticsScoredAgent]?
    public var properties: [AnalyticsProperty]?
    public var sourceConversationId: String?
    public var destinationConversationId: String?
    public var sourceSessionId: String?
    public var destinationSessionId: String?
    public var sipResponseCodes: [Int64]?
    public var q850ResponseCodes: [Int64]?
    /** Indicates whether the segment was a conference */
    public var conference: Bool?
    public var groupId: String?
    public var subject: String?
    public var audioMuted: Bool?
    public var videoMuted: Bool?

    public init(segmentStart: Date?, segmentEnd: Date?, queueId: String?, wrapUpCode: String?, wrapUpNote: String?, wrapUpTags: [String]?, errorCode: String?, disconnectType: DisconnectType?, segmentType: SegmentType?, requestedRoutingUserIds: [String]?, requestedRoutingSkillIds: [String]?, requestedLanguageId: String?, scoredAgents: [AnalyticsScoredAgent]?, properties: [AnalyticsProperty]?, sourceConversationId: String?, destinationConversationId: String?, sourceSessionId: String?, destinationSessionId: String?, sipResponseCodes: [Int64]?, q850ResponseCodes: [Int64]?, conference: Bool?, groupId: String?, subject: String?, audioMuted: Bool?, videoMuted: Bool?) {
        
        self.segmentStart = segmentStart
        
        self.segmentEnd = segmentEnd
        
        self.queueId = queueId
        
        self.wrapUpCode = wrapUpCode
        
        self.wrapUpNote = wrapUpNote
        
        self.wrapUpTags = wrapUpTags
        
        self.errorCode = errorCode
        
        self.disconnectType = disconnectType
        
        self.segmentType = segmentType
        
        self.requestedRoutingUserIds = requestedRoutingUserIds
        
        self.requestedRoutingSkillIds = requestedRoutingSkillIds
        
        self.requestedLanguageId = requestedLanguageId
        
        self.scoredAgents = scoredAgents
        
        self.properties = properties
        
        self.sourceConversationId = sourceConversationId
        
        self.destinationConversationId = destinationConversationId
        
        self.sourceSessionId = sourceSessionId
        
        self.destinationSessionId = destinationSessionId
        
        self.sipResponseCodes = sipResponseCodes
        
        self.q850ResponseCodes = q850ResponseCodes
        
        self.conference = conference
        
        self.groupId = groupId
        
        self.subject = subject
        
        self.audioMuted = audioMuted
        
        self.videoMuted = videoMuted
        
    }


}

