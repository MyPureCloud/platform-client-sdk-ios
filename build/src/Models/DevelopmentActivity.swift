//
// DevelopmentActivity.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Development Activity object */

public class DevelopmentActivity: Codable {

    public enum ModelType: String, Codable { 
        case informational = "Informational"
        case coaching = "Coaching"
    }
    public enum Status: String, Codable { 
        case planned = "Planned"
        case inProgress = "InProgress"
        case completed = "Completed"
        case invalidSchedule = "InvalidSchedule"
    }
    /** The globally unique identifier for the object. */
    public var _id: String?
    /** Date that activity was completed. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateCompleted: Date?
    /** User that created activity */
    public var createdBy: UserReference?
    /** Date activity was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateCreated: Date?
    /** The URI for this object */
    public var selfUri: String?
    /** The name of the activity */
    public var name: String?
    /** The type of activity */
    public var type: ModelType?
    /** The status of the activity */
    public var status: Status?
    /** Due date for completion of the activity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var dateDue: Date?
    /** Facilitator of the activity */
    public var facilitator: UserReference?
    /** List of users attending the activity */
    public var attendees: [UserReference]?
    /** Indicates if the activity is overdue */
    public var isOverdue: Bool?

    public init(_id: String?, dateCompleted: Date?, createdBy: UserReference?, dateCreated: Date?, selfUri: String?, name: String?, type: ModelType?, status: Status?, dateDue: Date?, facilitator: UserReference?, attendees: [UserReference]?, isOverdue: Bool?) {
        
        self._id = _id
        
        self.dateCompleted = dateCompleted
        
        self.createdBy = createdBy
        
        self.dateCreated = dateCreated
        
        self.selfUri = selfUri
        
        self.name = name
        
        self.type = type
        
        self.status = status
        
        self.dateDue = dateDue
        
        self.facilitator = facilitator
        
        self.attendees = attendees
        
        self.isOverdue = isOverdue
        
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case dateCompleted
        case createdBy
        case dateCreated
        case selfUri
        case name
        case type
        case status
        case dateDue
        case facilitator
        case attendees
        case isOverdue
    }


}

