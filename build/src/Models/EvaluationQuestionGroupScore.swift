//
// EvaluationQuestionGroupScore.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class EvaluationQuestionGroupScore: Codable {

    public var questionGroupId: String?
    /** Score of all questions in the group */
    public var totalScore: Float?
    /** Maximum possible score of all questions in the group */
    public var maxTotalScore: Float?
    public var markedNA: Bool?
    /** Score of only the critical questions in the group */
    public var totalCriticalScore: Float?
    /** Maximum possible score of only the critical questions in the group */
    public var maxTotalCriticalScore: Float?
    /** Score of only the non critical questions in the group */
    public var totalNonCriticalScore: Float?
    /** Maximum possible score of only the non critical questions in the group */
    public var maxTotalNonCriticalScore: Float?
    /** Unweighted score of all questions in the group */
    public var totalScoreUnweighted: Float?
    /** Maximum possible unweighted score of all questions in the group */
    public var maxTotalScoreUnweighted: Float?
    /** Unweighted score of only the critical questions in the group */
    public var totalCriticalScoreUnweighted: Float?
    /** Maximum possible unweighted score of only the critical questions in the group */
    public var maxTotalCriticalScoreUnweighted: Float?
    /** Unweighted score of only the non critical questions in the group */
    public var totalNonCriticalScoreUnweighted: Float?
    /** Maximum possible unweighted score of only the non critical questions in the group */
    public var maxTotalNonCriticalScoreUnweighted: Float?
    public var questionScores: [EvaluationQuestionScore]?

    public init(questionGroupId: String?, totalScore: Float?, maxTotalScore: Float?, markedNA: Bool?, totalCriticalScore: Float?, maxTotalCriticalScore: Float?, totalNonCriticalScore: Float?, maxTotalNonCriticalScore: Float?, totalScoreUnweighted: Float?, maxTotalScoreUnweighted: Float?, totalCriticalScoreUnweighted: Float?, maxTotalCriticalScoreUnweighted: Float?, totalNonCriticalScoreUnweighted: Float?, maxTotalNonCriticalScoreUnweighted: Float?, questionScores: [EvaluationQuestionScore]?) {
        self.questionGroupId = questionGroupId
        self.totalScore = totalScore
        self.maxTotalScore = maxTotalScore
        self.markedNA = markedNA
        self.totalCriticalScore = totalCriticalScore
        self.maxTotalCriticalScore = maxTotalCriticalScore
        self.totalNonCriticalScore = totalNonCriticalScore
        self.maxTotalNonCriticalScore = maxTotalNonCriticalScore
        self.totalScoreUnweighted = totalScoreUnweighted
        self.maxTotalScoreUnweighted = maxTotalScoreUnweighted
        self.totalCriticalScoreUnweighted = totalCriticalScoreUnweighted
        self.maxTotalCriticalScoreUnweighted = maxTotalCriticalScoreUnweighted
        self.totalNonCriticalScoreUnweighted = totalNonCriticalScoreUnweighted
        self.maxTotalNonCriticalScoreUnweighted = maxTotalNonCriticalScoreUnweighted
        self.questionScores = questionScores
    }


}

