//
// InitiatingAction.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class InitiatingAction: Codable {

    public enum ActionContext: String, Codable { 
        case create = "Create"
        case view = "View"
        case update = "Update"
        case move = "Move"
        case copy = "Copy"
        case delete = "Delete"
        case deleteAll = "DeleteAll"
        case fax = "Fax"
        case versionCreate = "VersionCreate"
        case download = "Download"
        case upload = "Upload"
        case memberAdd = "MemberAdd"
        case memberUpdate = "MemberUpdate"
        case memberRemove = "MemberRemove"
        case shareAdd = "ShareAdd"
        case shareRemove = "ShareRemove"
        case tagAdd = "TagAdd"
        case tagRemove = "TagRemove"
        case tagUpdate = "TagUpdate"
        case read = "Read"
        case readAll = "ReadAll"
        case execute = "Execute"
        case applyProtection = "ApplyProtection"
        case revokeProtection = "RevokeProtection"
        case updateRetention = "UpdateRetention"
        case abandon = "Abandon"
        case archive = "Archive"
        case restoreRequest = "RestoreRequest"
        case restoreComplete = "RestoreComplete"
        case promote = "Promote"
        case publish = "Publish"
        case unpublish = "Unpublish"
        case activate = "Activate"
        case checkin = "Checkin"
        case checkout = "Checkout"
        case deactivate = "Deactivate"
        case debug = "Debug"
        case save = "Save"
        case revert = "Revert"
        case transcode = "Transcode"
        case enable = "Enable"
        case disable = "Disable"
        case authorize = "Authorize"
        case deauthorize = "Deauthorize"
        case authenticate = "Authenticate"
        case changePassword = "ChangePassword"
        case revoke = "Revoke"
        case export = "Export"
        case append = "Append"
        case recycle = "Recycle"
        case _open = "Open"
        case approved = "Approved"
        case rejected = "Rejected"
        case rollback = "Rollback"
        case implementingChange = "ImplementingChange"
        case changeImplemented = "ChangeImplemented"
        case implementingRollback = "ImplementingRollback"
        case rollbackImplemented = "RollbackImplemented"
        case write = "Write"
        case purge = "Purge"
        case processed = "Processed"
        case remove = "Remove"
        case replace = "Replace"
        case updateInService = "UpdateInService"
        case updateOutOfService = "UpdateOutOfService"
        case cycle = "Cycle"
        case scale = "Scale"
        case ipAllowlistClear = "IpAllowlistClear"
        case addPairingRole = "AddPairingRole"
        case add = "Add"
        case verify = "Verify"
        case assign = "Assign"
        case unassign = "Unassign"
        case reassign = "Reassign"
        case reschedule = "Reschedule"
        case cancel = "Cancel"
        case softDelete = "SoftDelete"
        case hardDelete = "HardDelete"
        case reset = "Reset"
        case rotate = "Rotate"
        case restore = "Restore"
        case unarchive = "Unarchive"
        case enableCapture = "EnableCapture"
        case downloadCapture = "DownloadCapture"
    }
    /** Id of the audit initiating the transaction */
    public var transactionId: String?
    /** Action of the audit initiating the transaction */
    public var actionContext: ActionContext?

    public init(transactionId: String?, actionContext: ActionContext?) {
        self.transactionId = transactionId
        self.actionContext = actionContext
    }


}

