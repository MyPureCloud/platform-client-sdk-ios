//
// SendAgentlessOutboundMessageResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class SendAgentlessOutboundMessageResponse: Codable {

    public enum MessengerType: String, Codable { 
        case sms = "sms"
        case facebook = "facebook"
        case twitter = "twitter"
        case line = "line"
        case whatsapp = "whatsapp"
        case webmessaging = "webmessaging"
    }
    /** The globally unique identifier for the object. */
    public var _id: String?
    /** The identifier of the conversation. */
    public var conversationId: String?
    /** The sender of the text message. */
    public var fromAddress: String?
    /** The recipient of the text message. */
    public var toAddress: String?
    /** Type of text messenger. */
    public var messengerType: MessengerType?
    /** The body of the text message. */
    public var textBody: String?
    /** The time when the message was sent. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z */
    public var timestamp: Date?
    /** The URI for this object */
    public var selfUri: String?
    /** Details of the user created the job */
    public var user: AddressableEntityRef?

    public init(_id: String?, conversationId: String?, fromAddress: String?, toAddress: String?, messengerType: MessengerType?, textBody: String?, timestamp: Date?, selfUri: String?, user: AddressableEntityRef?) {
        
        self._id = _id
        
        self.conversationId = conversationId
        
        self.fromAddress = fromAddress
        
        self.toAddress = toAddress
        
        self.messengerType = messengerType
        
        self.textBody = textBody
        
        self.timestamp = timestamp
        
        self.selfUri = selfUri
        
        self.user = user
        
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case conversationId
        case fromAddress
        case toAddress
        case messengerType
        case textBody
        case timestamp
        case selfUri
        case user
    }


}

