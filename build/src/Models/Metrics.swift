//
// Metrics.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class Metrics: Codable {

    public enum UnitType: String, Codable { 
        case _none = "None"
        case percent = "Percent"
        case currency = "Currency"
        case seconds = "Seconds"
        case number = "Number"
        case attendanceStatus = "AttendanceStatus"
        case unit = "Unit"
    }
    /** The globally unique identifier for the object. */
    public var _id: String?
    public var name: String?
    /** The order of metric within a performance profile */
    public var order: Int?
    /** The name of associated metric definition */
    public var metricDefinitionName: String?
    /** The id of associated metric definition */
    public var metricDefinitionId: String?
    /** The id of associated external metric definition */
    public var externalMetricDefinitionId: String?
    /** Corresponding unit type for this metric */
    public var unitType: UnitType?
    /** A flag for whether this metric is enabled for a performance profile */
    public var enabled: Bool?
    /** The name of associated objective template */
    public var templateName: String?
    /** Achievable maximum points for this metric */
    public var maxPoints: Int?
    /** Performance profile id of this metric */
    public var performanceProfileId: String?
    /** Unit definition of linked external metric */
    public var unitDefinition: String?
    /** Precision of linked external metric */
    public var precision: Int?
    /** The URI for this object */
    public var selfUri: String?

    public init(_id: String?, name: String?, order: Int?, metricDefinitionName: String?, metricDefinitionId: String?, externalMetricDefinitionId: String?, unitType: UnitType?, enabled: Bool?, templateName: String?, maxPoints: Int?, performanceProfileId: String?, unitDefinition: String?, precision: Int?, selfUri: String?) {
        
        self._id = _id
        
        self.name = name
        
        self.order = order
        
        self.metricDefinitionName = metricDefinitionName
        
        self.metricDefinitionId = metricDefinitionId
        
        self.externalMetricDefinitionId = externalMetricDefinitionId
        
        self.unitType = unitType
        
        self.enabled = enabled
        
        self.templateName = templateName
        
        self.maxPoints = maxPoints
        
        self.performanceProfileId = performanceProfileId
        
        self.unitDefinition = unitDefinition
        
        self.precision = precision
        
        self.selfUri = selfUri
        
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case name
        case order
        case metricDefinitionName
        case metricDefinitionId
        case externalMetricDefinitionId
        case unitType
        case enabled
        case templateName
        case maxPoints
        case performanceProfileId
        case unitDefinition
        case precision
        case selfUri
    }


}

