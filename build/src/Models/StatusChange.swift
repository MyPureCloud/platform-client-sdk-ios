//
// StatusChange.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class StatusChange: Codable {

    public enum Status: String, Codable { 
        case _open = "Open"
        case approved = "Approved"
        case implementingChange = "ImplementingChange"
        case changeImplemented = "ChangeImplemented"
        case rejected = "Rejected"
        case rollback = "Rollback"
        case implementingRollback = "ImplementingRollback"
        case rollbackImplemented = "RollbackImplemented"
    }
    public enum PreviousStatus: String, Codable { 
        case _open = "Open"
        case approved = "Approved"
        case implementingChange = "ImplementingChange"
        case changeImplemented = "ChangeImplemented"
        case rejected = "Rejected"
        case rollback = "Rollback"
        case implementingRollback = "ImplementingRollback"
        case rollbackImplemented = "RollbackImplemented"
    }
    public enum RejectReason: String, Codable { 
        case alternativeExists = "AlternativeExists"
        case increaseNotRequired = "IncreaseNotRequired"
        case platformMisuse = "PlatformMisuse"
        case platformStability = "PlatformStability"
        case otherReason = "OtherReason"
    }
    /** The date of this status change. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z */
    public var dateStatusChanged: Date?
    /** The status the change request transitioned to */
    public var status: Status?
    /** The status the change request transitioned from */
    public var previousStatus: PreviousStatus?
    /** A short message describing the status change */
    public var message: String?
    /** If applicable, the user who updated the change request to this status */
    public var changedBy: String?
    /** The reason for rejecting the limit override request */
    public var rejectReason: RejectReason?

    public init(dateStatusChanged: Date?, status: Status?, previousStatus: PreviousStatus?, message: String?, changedBy: String?, rejectReason: RejectReason?) {
        
        self.dateStatusChanged = dateStatusChanged
        
        self.status = status
        
        self.previousStatus = previousStatus
        
        self.message = message
        
        self.changedBy = changedBy
        
        self.rejectReason = rejectReason
        
    }


}

