//
// WfmForecastModification.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** A modification to a short term forecast */

public class WfmForecastModification: Codable {

    public enum ModelType: String, Codable { 
        case minimumPerInterval = "MinimumPerInterval"
        case maximumPerInterval = "MaximumPerInterval"
        case setValuePerInterval = "SetValuePerInterval"
        case changeValuePerInterval = "ChangeValuePerInterval"
        case changePercentPerInterval = "ChangePercentPerInterval"
        case setValueOverRange = "SetValueOverRange"
        case changeValueOverRange = "ChangeValueOverRange"
        case setValuesForIntervalSet = "SetValuesForIntervalSet"
    }
    public enum Metric: String, Codable { 
        case offered = "Offered"
        case averageTalkTimeSeconds = "AverageTalkTimeSeconds"
        case averageAfterCallWorkTimeSeconds = "AverageAfterCallWorkTimeSeconds"
        case averageHandleTimeSeconds = "AverageHandleTimeSeconds"
    }
    /** The type of the modification */
    public var type: ModelType?
    /** The number of 15 minute intervals past referenceStartDate representing the first interval to which to apply this modification. Must be null if values is populated */
    public var startIntervalIndex: Int?
    /** The number of 15 minute intervals past referenceStartDate representing the last interval to which to apply this modification.  Must be null if values is populated */
    public var endIntervalIndex: Int?
    /** The metric to which this modification applies */
    public var metric: Metric?
    /** The value of the modification.  Must be null if \&quot;values\&quot; is populated */
    public var value: Double?
    /** The list of values to update.  Only applicable for grid-type modifications. Must be null if \&quot;value\&quot; is populated */
    public var values: [WfmForecastModificationIntervalOffsetValue]?
    /** Whether the modification is enabled for the forecast */
    public var enabled: Bool?
    /** The attributes defining how this modification applies to the forecast */
    public var attributes: WfmForecastModificationAttributes?

    public init(type: ModelType?, startIntervalIndex: Int?, endIntervalIndex: Int?, metric: Metric?, value: Double?, values: [WfmForecastModificationIntervalOffsetValue]?, enabled: Bool?, attributes: WfmForecastModificationAttributes?) {
        
        self.type = type
        
        self.startIntervalIndex = startIntervalIndex
        
        self.endIntervalIndex = endIntervalIndex
        
        self.metric = metric
        
        self.value = value
        
        self.values = values
        
        self.enabled = enabled
        
        self.attributes = attributes
        
    }


}

