//
// DialerAction.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class DialerAction: Codable {

    public enum ModelType: String, Codable { 
        case action = "Action"
        case modifycontactattribute = "modifyContactAttribute"
        case dataactionbehavior = "dataActionBehavior"
    }
    public enum ActionTypeName: String, Codable { 
        case doNotDial = "DO_NOT_DIAL"
        case modifyContactAttribute = "MODIFY_CONTACT_ATTRIBUTE"
        case switchToPreview = "SWITCH_TO_PREVIEW"
        case appendNumberToDncList = "APPEND_NUMBER_TO_DNC_LIST"
        case scheduleCallback = "SCHEDULE_CALLBACK"
        case contactUncallable = "CONTACT_UNCALLABLE"
        case numberUncallable = "NUMBER_UNCALLABLE"
        case setCallerId = "SET_CALLER_ID"
        case setSkills = "SET_SKILLS"
        case dataAction = "DATA_ACTION"
    }
    public enum UpdateOption: String, Codable { 
        case _set = "SET"
        case increment = "INCREMENT"
        case decrement = "DECREMENT"
        case currentTime = "CURRENT_TIME"
    }
    /** The type of this DialerAction. */
    public var type: ModelType?
    /** Additional type specification for this DialerAction. */
    public var actionTypeName: ActionTypeName?
    /** Specifies how a contact attribute should be updated. Required for MODIFY_CONTACT_ATTRIBUTE. */
    public var updateOption: UpdateOption?
    /** A map of key-value pairs pertinent to the DialerAction. Different types of DialerActions require different properties. MODIFY_CONTACT_ATTRIBUTE with an updateOption of SET takes a contact column as the key and accepts any value. SCHEDULE_CALLBACK takes a key &#39;callbackOffset&#39; that specifies how far in the future the callback should be scheduled, in minutes. SET_CALLER_ID takes two keys: &#39;callerAddress&#39;, which should be the caller id phone number, and &#39;callerName&#39;. For either key, you can also specify a column on the contact to get the value from. To do this, specify &#39;contact.Column&#39;, where &#39;Column&#39; is the name of the contact column from which to get the value. SET_SKILLS takes a key &#39;skills&#39; with an array of skill ids wrapped into a string (Example: {&#39;skills&#39;: &#39;[&#39;skillIdHere&#39;]&#39;} ). */
    public var properties: [String:String]?

    public init(type: ModelType?, actionTypeName: ActionTypeName?, updateOption: UpdateOption?, properties: [String:String]?) {
        
        self.type = type
        
        self.actionTypeName = actionTypeName
        
        self.updateOption = updateOption
        
        self.properties = properties
        
    }


}

