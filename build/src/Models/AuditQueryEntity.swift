//
// AuditQueryEntity.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class AuditQueryEntity: Codable {

    public enum Name: String, Codable { 
        case document = "Document"
        case queue = "Queue"
        case recording = "Recording"
        case role = "Role"
        case voicemailUserPolicy = "VoicemailUserPolicy"
        case wrapupCode = "WrapupCode"
        case accessToken = "AccessToken"
        case oauthclient = "OAuthClient"
        case oauthclientauthorization = "OAuthClientAuthorization"
        case authOrganization = "AuthOrganization"
        case authUser = "AuthUser"
        case bulkActions = "BulkActions"
        case feedback = "Feedback"
        case topic = "Topic"
        case program = "Program"
        case segment = "Segment"
        case outcome = "Outcome"
        case clickstreamSettings = "ClickstreamSettings"
        case schedule = "Schedule"
        case trigger = "Trigger"
    }
    public enum Actions: String, Codable { 
        case create = "Create"
        case view = "View"
        case update = "Update"
        case delete = "Delete"
        case download = "Download"
        case memberAdd = "MemberAdd"
        case memberUpdate = "MemberUpdate"
        case memberRemove = "MemberRemove"
        case read = "Read"
        case applyProtection = "ApplyProtection"
        case revokeProtection = "RevokeProtection"
        case updateRetention = "UpdateRetention"
        case readAll = "ReadAll"
        case execute = "Execute"
        case publish = "Publish"
        case unpublish = "Unpublish"
        case enable = "Enable"
        case disable = "Disable"
        case authorize = "Authorize"
        case deauthorize = "Deauthorize"
        case authenticate = "Authenticate"
        case changePassword = "ChangePassword"
    }
    /** Name of the Entity */
    public var name: Name?
    /** List of Actions */
    public var actions: [Actions]?

    public init(name: Name?, actions: [Actions]?) {
        
        self.name = name
        
        self.actions = actions
        
    }


}

