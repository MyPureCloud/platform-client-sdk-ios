//
// VoicemailGroupPolicy.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class VoicemailGroupPolicy: Codable {

    public enum GroupAlertType: String, Codable { 
        case random = "RANDOM"
        case roundRobin = "ROUND_ROBIN"
        case sequential = "SEQUENTIAL"
    }
    public var name: String?
    /** The group associated with the policy */
    public var group: Group?
    /** Whether voicemail is enabled for the group */
    public var enabled: Bool?
    /** Whether email notifications are sent to group members when a new voicemail is received */
    public var sendEmailNotifications: Bool?
    /** How many seconds to ring before rotating to the next member in the group */
    public var rotateCallsSecs: Int?
    /** How many rotations to go through */
    public var stopRingingAfterRotations: Int?
    /**  A fallback group to contact when all of the members in this group did not answer the call. */
    public var overflowGroupId: String?
    /** Specifies if the members in this group should be contacted randomly, in a specific order, or by round-robin. */
    public var groupAlertType: GroupAlertType?

    public init(name: String?, group: Group?, enabled: Bool?, sendEmailNotifications: Bool?, rotateCallsSecs: Int?, stopRingingAfterRotations: Int?, overflowGroupId: String?, groupAlertType: GroupAlertType?) {
        
        self.name = name
        
        self.group = group
        
        self.enabled = enabled
        
        self.sendEmailNotifications = sendEmailNotifications
        
        self.rotateCallsSecs = rotateCallsSecs
        
        self.stopRingingAfterRotations = stopRingingAfterRotations
        
        self.overflowGroupId = overflowGroupId
        
        self.groupAlertType = groupAlertType
        
    }


}

