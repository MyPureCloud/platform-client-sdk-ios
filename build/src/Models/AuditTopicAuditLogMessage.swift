//
// AuditTopicAuditLogMessage.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class AuditTopicAuditLogMessage: Codable {

    public enum ServiceName: String, Codable { 
        case languageUnderstanding = "LanguageUnderstanding"
        case contentManagement = "ContentManagement"
        case peoplePermissions = "PeoplePermissions"
        case presence = "Presence"
        case architect = "Architect"
        case contactCenter = "ContactCenter"
        case quality = "Quality"
        case speechAndTextAnalytics = "SpeechAndTextAnalytics"
        case predictiveEngagement = "PredictiveEngagement"
        case knowledge = "Knowledge"
        case coaching = "Coaching"
        case learning = "Learning"
        case workforceManagement = "WorkforceManagement"
        case triggers = "Triggers"
        case processAutomation = "ProcessAutomation"
        case responseManagement = "ResponseManagement"
        case groups = "Groups"
        case telephony = "Telephony"
        case outbound = "Outbound"
        case routing = "Routing"
        case gamification = "Gamification"
        case integrations = "Integrations"
        case webhooks = "Webhooks"
        case analyticsReporting = "AnalyticsReporting"
        case limits = "Limits"
        case employeePerformance = "EmployeePerformance"
        case datatables = "Datatables"
        case messaging = "Messaging"
        case webDeployments = "WebDeployments"
        case supportability = "Supportability"
        case callback = "Callback"
        case directory = "Directory"
        case externalContacts = "ExternalContacts"
        case workitems = "Workitems"
        case scim = "SCIM"
        case numberPurchasing = "NumberPurchasing"
        case marketplace = "Marketplace"
        case logCapture = "LogCapture"
        case gdprservice = "GDPRService"
        case agentConfig = "AgentConfig"
        case emails = "Emails"
    }
    public enum Action: String, Codable { 
        case view = "View"
        case create = "Create"
        case update = "Update"
        case move = "Move"
        case copy = "Copy"
        case download = "Download"
        case shareAdd = "ShareAdd"
        case shareRemove = "ShareRemove"
        case fax = "Fax"
        case versionCreate = "VersionCreate"
        case tagAdd = "TagAdd"
        case tagRemove = "TagRemove"
        case tagUpdate = "TagUpdate"
        case delete = "Delete"
        case memberAdd = "MemberAdd"
        case memberUpdate = "MemberUpdate"
        case memberRemove = "MemberRemove"
        case authorize = "Authorize"
        case deauthorize = "Deauthorize"
        case authenticate = "Authenticate"
        case changePassword = "ChangePassword"
        case revoke = "Revoke"
        case activate = "Activate"
        case checkin = "Checkin"
        case checkout = "Checkout"
        case deactivate = "Deactivate"
        case debug = "Debug"
        case publish = "Publish"
        case revert = "Revert"
        case save = "Save"
        case transcode = "Transcode"
        case upload = "Upload"
        case read = "Read"
        case execute = "Execute"
        case abandon = "Abandon"
        case archive = "Archive"
        case export = "Export"
        case restoreRequest = "RestoreRequest"
        case restoreComplete = "RestoreComplete"
        case updateRetention = "UpdateRetention"
        case applyProtection = "ApplyProtection"
        case revokeProtection = "RevokeProtection"
        case rotate = "Rotate"
        case deleteAll = "DeleteAll"
        case reassign = "Reassign"
        case unarchive = "Unarchive"
        case assign = "Assign"
        case unassign = "Unassign"
        case reset = "Reset"
        case reschedule = "Reschedule"
        case unpublish = "Unpublish"
        case purge = "Purge"
        case processed = "Processed"
        case enable = "Enable"
        case disable = "Disable"
        case recycle = "Recycle"
        case append = "Append"
        case restore = "Restore"
        case _open = "Open"
        case approved = "Approved"
        case rejected = "Rejected"
        case rollback = "Rollback"
        case implementingChange = "ImplementingChange"
        case changeImplemented = "ChangeImplemented"
        case implementingRollback = "ImplementingRollback"
        case rollbackImplemented = "RollbackImplemented"
        case write = "Write"
        case replace = "Replace"
        case updateInService = "UpdateInService"
        case updateOutOfService = "UpdateOutOfService"
        case cycle = "Cycle"
        case scale = "Scale"
        case ipAllowlistClear = "IpAllowlistClear"
        case add = "Add"
        case addPairingRole = "AddPairingRole"
        case verify = "Verify"
        case cancel = "Cancel"
        case hardDelete = "HardDelete"
        case enableCapture = "EnableCapture"
        case downloadCapture = "DownloadCapture"
    }
    public enum EntityType: String, Codable { 
        case feedback = "Feedback"
        case document = "Document"
        case workspace = "Workspace"
        case accessToken = "AccessToken"
        case oauthclientauthorization = "OAuthClientAuthorization"
        case authOrganization = "AuthOrganization"
        case oauthclient = "OAuthClient"
        case authUser = "AuthUser"
        case organizationAuthorizationTrust = "OrganizationAuthorizationTrust"
        case organizationAuthorizationUserTrust = "OrganizationAuthorizationUserTrust"
        case role = "Role"
        case roleSettings = "RoleSettings"
        case voicemailUserPolicy = "VoicemailUserPolicy"
        case userPresence = "UserPresence"
        case dependencyTrackingBuild = "DependencyTrackingBuild"
        case flow = "Flow"
        case prompt = "Prompt"
        case promptResource = "PromptResource"
        case flowOutcome = "FlowOutcome"
        case flowMilestone = "FlowMilestone"
        case agentRoutingInfo = "AgentRoutingInfo"
        case queue = "Queue"
        case wrapupCode = "WrapupCode"
        case maxOrgRoutingUtilizationCapacity = "MaxOrgRoutingUtilizationCapacity"
        case conversationAttributes = "ConversationAttributes"
        case routingUtilizationTag = "RoutingUtilizationTag"
        case evaluation = "Evaluation"
        case calibration = "Calibration"
        case survey = "Survey"
        case evaluationForm = "EvaluationForm"
        case surveyForm = "SurveyForm"
        case recording = "Recording"
        case screenRecording = "ScreenRecording"
        case bulkActions = "BulkActions"
        case orphanedRecording = "OrphanedRecording"
        case policy = "Policy"
        case recordingAnnotation = "RecordingAnnotation"
        case recordingSettings = "RecordingSettings"
        case recordingKey = "RecordingKey"
        case recordingKeyConfig = "RecordingKeyConfig"
        case topic = "Topic"
        case program = "Program"
        case sentimentFeedback = "SentimentFeedback"
        case segment = "Segment"
        case outcome = "Outcome"
        case actionMap = "ActionMap"
        case actionTemplate = "ActionTemplate"
        case clickstreamSettings = "ClickstreamSettings"
        case eventType = "EventType"
        case sessionType = "SessionType"
        case knowledgeBase = "KnowledgeBase"
        case knowledgeCategory = "KnowledgeCategory"
        case knowledgeDocument = "KnowledgeDocument"
        case knowledgeDocumentVariation = "KnowledgeDocumentVariation"
        case knowledgeLabel = "KnowledgeLabel"
        case knowledgeTraining = "KnowledgeTraining"
        case knowledgeSearchFeedback = "KnowledgeSearchFeedback"
        case transcriptionSettings = "TranscriptionSettings"
        case speechTextAnalyticsSettings = "SpeechTextAnalyticsSettings"
        case appointment = "Appointment"
        case annotation = "Annotation"
        case organization = "Organization"
        case module = "Module"
        case rule = "Rule"
        case assignment = "Assignment"
        case activityCode = "ActivityCode"
        case adherenceExplanation = "AdherenceExplanation"
        case businessUnit = "BusinessUnit"
        case forecast = "Forecast"
        case managementUnit = "ManagementUnit"
        case planningGroup = "PlanningGroup"
        case schedule = "Schedule"
        case serviceGoalTemplate = "ServiceGoalTemplate"
        case shiftTrade = "ShiftTrade"
        case timeOffLimit = "TimeOffLimit"
        case timeOffPlan = "TimeOffPlan"
        case timeOffRequest = "TimeOffRequest"
        case workPlan = "WorkPlan"
        case workPlanRotation = "WorkPlanRotation"
        case historicalData = "HistoricalData"
        case trigger = "Trigger"
        case response = "Response"
        case responseAsset = "ResponseAsset"
        case skill = "Skill"
        case directory = "Directory"
        case team = "Team"
        case edge = "Edge"
        case edgeGroup = "EdgeGroup"
        case voicemailPolicy = "VoicemailPolicy"
        case routingTranscriptionSettings = "RoutingTranscriptionSettings"
        case trunk = "Trunk"
        case trunkBase = "TrunkBase"
        case scheduleGroup = "ScheduleGroup"
        case emergencyGroup = "EmergencyGroup"
        case ivr = "IVR"
        case did = "DID"
        case didpool = "DIDPool"
        case _extension = "Extension"
        case extensionPool = "ExtensionPool"
        case phone = "Phone"
        case phoneBase = "PhoneBase"
        case line = "Line"
        case lineBase = "LineBase"
        case outboundRoute = "OutboundRoute"
        case numberPlan = "NumberPlan"
        case site = "Site"
        case attemptLimits = "AttemptLimits"
        case callableTimeSet = "CallableTimeSet"
        case campaign = "Campaign"
        case campaignRule = "CampaignRule"
        case campaignSchedule = "CampaignSchedule"
        case sequence = "Sequence"
        case sequenceSchedule = "SequenceSchedule"
        case contactList = "ContactList"
        case contactListFilter = "ContactListFilter"
        case digitalRuleSet = "DigitalRuleSet"
        case dnclist = "DNCList"
        case organizationSettings = "OrganizationSettings"
        case callAnalysisResponseSet = "CallAnalysisResponseSet"
        case ruleSet = "RuleSet"
        case wrapUpCodeMapping = "WrapUpCodeMapping"
        case messagingCampaign = "MessagingCampaign"
        case messagingCampaignSchedule = "MessagingCampaignSchedule"
        case emailCampaignSchedule = "EmailCampaignSchedule"
        case predictor = "Predictor"
        case metric = "Metric"
        case status = "Status"
        case profile = "Profile"
        case profileMembers = "ProfileMembers"
        case action = "Action"
        case actionDraft = "ActionDraft"
        case integration = "Integration"
        case webhook = "Webhook"
        case dashboardSettings = "DashboardSettings"
        case insightSettings = "InsightSettings"
        case analyticsReportingSettings = "AnalyticsReportingSettings"
        case scheduledExports = "ScheduledExports"
        case exports = "Exports"
        case changeRequest = "ChangeRequest"
        case externalMetricsDefinition = "ExternalMetricsDefinition"
        case externalMetricsData = "ExternalMetricsData"
        case schema = "Schema"
        case row = "Row"
        case bulk = "Bulk"
        case supportedContent = "SupportedContent"
        case conversationPhoneNumber = "ConversationPhoneNumber"
        case conversationRecipient = "ConversationRecipient"
        case conversationAccount = "ConversationAccount"
        case conversationDefaultSupportedContent = "ConversationDefaultSupportedContent"
        case conversationThreadingWindow = "ConversationThreadingWindow"
        case deployment = "Deployment"
        case configuration = "Configuration"
        case configurationVersion = "ConfigurationVersion"
        case edgePreferences = "EdgePreferences"
        case edgeTraceLevel = "EdgeTraceLevel"
        case organizationIntegrationsAccess = "OrganizationIntegrationsAccess"
        case supportFile = "SupportFile"
        case edgeLogZip = "EdgeLogZip"
        case pcaps = "Pcaps"
        case mediaDiagnosticsTraceFile = "MediaDiagnosticsTraceFile"
        case edgePcaps = "EdgePcaps"
        case edgeLog = "EdgeLog"
        case organizationFeature = "OrganizationFeature"
        case product = "Product"
        case user = "User"
        case location = "Location"
        case participant = "Participant"
        case contactSchema = "ContactSchema"
        case externalOrganizationSchema = "ExternalOrganizationSchema"
        case workbin = "Workbin"
        case workitem = "Workitem"
        case worktype = "Worktype"
        case credential = "Credential"
        case numberOrder = "NumberOrder"
        case enterpriseAgreement = "EnterpriseAgreement"
        case gdprRequest = "GdprRequest"
        case defaultPanelSettings = "DefaultPanelSettings"
        case inboundDomain = "InboundDomain"
        case outboundDomain = "OutboundDomain"
        case inboundRoute = "InboundRoute"
        case organizationLimits = "OrganizationLimits"
    }
    public var _id: String?
    public var userId: String?
    public var userHomeOrgId: String?
    public var username: AuditTopicDomainEntityRef?
    public var userDisplay: String?
    public var clientId: AuditTopicAddressableEntityRef?
    public var remoteIp: [String]?
    public var serviceName: ServiceName?
    public var eventTime: Date?
    public var message: AuditTopicMessageInfo?
    public var action: Action?
    public var entityType: EntityType?
    public var entity: AuditTopicDomainEntityRef?
    public var propertyChanges: [AuditTopicPropertyChange]?
    public var context: [String:String]?

    public init(_id: String?, userId: String?, userHomeOrgId: String?, username: AuditTopicDomainEntityRef?, userDisplay: String?, clientId: AuditTopicAddressableEntityRef?, remoteIp: [String]?, serviceName: ServiceName?, eventTime: Date?, message: AuditTopicMessageInfo?, action: Action?, entityType: EntityType?, entity: AuditTopicDomainEntityRef?, propertyChanges: [AuditTopicPropertyChange]?, context: [String:String]?) {
        self._id = _id
        self.userId = userId
        self.userHomeOrgId = userHomeOrgId
        self.username = username
        self.userDisplay = userDisplay
        self.clientId = clientId
        self.remoteIp = remoteIp
        self.serviceName = serviceName
        self.eventTime = eventTime
        self.message = message
        self.action = action
        self.entityType = entityType
        self.entity = entity
        self.propertyChanges = propertyChanges
        self.context = context
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case userId
        case userHomeOrgId
        case username
        case userDisplay
        case clientId
        case remoteIp
        case serviceName
        case eventTime
        case message
        case action
        case entityType
        case entity
        case propertyChanges
        case context
    }


}

