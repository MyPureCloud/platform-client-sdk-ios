//
// SchedulingRunResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Information containing details of a schedule run */

public class SchedulingRunResponse: Codable {

    public enum State: String, Codable { 
        case _none = "None"
        case queued = "Queued"
        case scheduling = "Scheduling"
        case canceled = "Canceled"
        case failed = "Failed"
        case complete = "Complete"
    }
    /** ID of the schedule run */
    public var runId: String?
    /** The runId from scheduler service.  Useful for debugging schedule errors */
    public var schedulerRunId: String?
    /** Whether this is the result of a rescheduling request */
    public var intradayRescheduling: Bool?
    /** Status of the schedule run */
    public var state: State?
    /** Completion percentage of the schedule run */
    public var percentComplete: Double?
    /** The start date of the week for which the scheduling is done in yyyy-MM-dd format */
    public var targetWeek: String?
    /** ID of the schedule. Does not apply to reschedule, see reschedulingOptions.existingScheduleId */
    public var scheduleId: String?
    /** Description of the schedule */
    public var scheduleDescription: String?
    /** Start time of the schedule run. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var schedulingStartTime: Date?
    /** User that started the schedule run */
    public var schedulingStartedBy: UserReference?
    /** User that canceled the schedule run */
    public var schedulingCanceledBy: UserReference?
    /** Time at which the scheduling run was completed. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var schedulingCompletedTime: Date?
    /** The selected options for the reschedule request. Will always be null if intradayRescheduling is false */
    public var reschedulingOptions: ReschedulingOptionsResponse?
    /** When the rescheduling result data will expire. Results are kept temporarily as they should be applied as soon as possible after the run finishes.  Will always be null if intradayRescheduling is false. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ */
    public var reschedulingResultExpiration: Date?
    /** Whether the rescheduling run has been marked applied */
    public var applied: Bool?
    /** Agents that were not scheduled in the rescheduling operation. Will always be null if intradayRescheduling is false */
    public var unscheduledAgents: [UnscheduledAgentWarning]?

    public init(runId: String?, schedulerRunId: String?, intradayRescheduling: Bool?, state: State?, percentComplete: Double?, targetWeek: String?, scheduleId: String?, scheduleDescription: String?, schedulingStartTime: Date?, schedulingStartedBy: UserReference?, schedulingCanceledBy: UserReference?, schedulingCompletedTime: Date?, reschedulingOptions: ReschedulingOptionsResponse?, reschedulingResultExpiration: Date?, applied: Bool?, unscheduledAgents: [UnscheduledAgentWarning]?) {
        
        self.runId = runId
        
        self.schedulerRunId = schedulerRunId
        
        self.intradayRescheduling = intradayRescheduling
        
        self.state = state
        
        self.percentComplete = percentComplete
        
        self.targetWeek = targetWeek
        
        self.scheduleId = scheduleId
        
        self.scheduleDescription = scheduleDescription
        
        self.schedulingStartTime = schedulingStartTime
        
        self.schedulingStartedBy = schedulingStartedBy
        
        self.schedulingCanceledBy = schedulingCanceledBy
        
        self.schedulingCompletedTime = schedulingCompletedTime
        
        self.reschedulingOptions = reschedulingOptions
        
        self.reschedulingResultExpiration = reschedulingResultExpiration
        
        self.applied = applied
        
        self.unscheduledAgents = unscheduledAgents
        
    }


}

