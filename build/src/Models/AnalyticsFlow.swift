//
// AnalyticsFlow.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class AnalyticsFlow: Codable {

    public enum FlowType: String, Codable { 
        case bot = "BOT"
        case commonmodule = "COMMONMODULE"
        case inboundcall = "INBOUNDCALL"
        case inboundchat = "INBOUNDCHAT"
        case inboundemail = "INBOUNDEMAIL"
        case inboundshortmessage = "INBOUNDSHORTMESSAGE"
        case inqueuecall = "INQUEUECALL"
        case outboundcall = "OUTBOUNDCALL"
        case securecall = "SECURECALL"
        case speech = "SPEECH"
        case surveyinvite = "SURVEYINVITE"
        case workflow = "WORKFLOW"
    }
    public enum EntryType: String, Codable { 
        case dnis = "dnis"
        case direct = "direct"
        case flow = "flow"
        case agent = "agent"
        case outbound = "outbound"
    }
    /** The unique identifier of this flow */
    public var flowId: String?
    /** The name of this flow */
    public var flowName: String?
    /** The version of this flow */
    public var flowVersion: String?
    /** The type of this flow */
    public var flowType: FlowType?
    /** The exit reason for this flow, e.g. DISCONNECT */
    public var exitReason: String?
    /** The particular entry reason for this flow, e.g. an address, userId, or flowId */
    public var entryReason: String?
    /** The entry type for this flow */
    public var entryType: EntryType?
    /** The type of transfer for flows that ended with a transfer */
    public var transferType: String?
    /** The name of a transfer target */
    public var transferTargetName: String?
    /** The address of a transfer target */
    public var transferTargetAddress: String?
    /** Flag indicating whether the flow issued a callback */
    public var issuedCallback: Bool?
    /** Flow starting language, e.g. en-us */
    public var startingLanguage: String?
    /** Flow ending language, e.g. en-us */
    public var endingLanguage: String?
    /** Flow outcomes */
    public var outcomes: [AnalyticsFlowOutcome]?

    public init(flowId: String?, flowName: String?, flowVersion: String?, flowType: FlowType?, exitReason: String?, entryReason: String?, entryType: EntryType?, transferType: String?, transferTargetName: String?, transferTargetAddress: String?, issuedCallback: Bool?, startingLanguage: String?, endingLanguage: String?, outcomes: [AnalyticsFlowOutcome]?) {
        
        self.flowId = flowId
        
        self.flowName = flowName
        
        self.flowVersion = flowVersion
        
        self.flowType = flowType
        
        self.exitReason = exitReason
        
        self.entryReason = entryReason
        
        self.entryType = entryType
        
        self.transferType = transferType
        
        self.transferTargetName = transferTargetName
        
        self.transferTargetAddress = transferTargetAddress
        
        self.issuedCallback = issuedCallback
        
        self.startingLanguage = startingLanguage
        
        self.endingLanguage = endingLanguage
        
        self.outcomes = outcomes
        
    }


}

