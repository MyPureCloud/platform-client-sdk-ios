//
// SpeechTextAnalyticsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class SpeechTextAnalyticsAPI {
    
    
    
    
    
    /**
     
     Get the pre-signed S3 URL for the transcript of a specific communication of a conversation
     
     - parameter conversationId: (path) Conversation ID 
     - parameter communicationId: (path) Communication ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId: String, communicationId: String, completion: @escaping ((_ data: TranscriptUrl?,_ error: Error?) -> Void)) {
        let requestBuilder = getSpeechandtextanalyticsConversationCommunicationTranscripturlWithRequestBuilder(conversationId: conversationId, communicationId: communicationId)
        requestBuilder.execute { (response: Response<TranscriptUrl>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     
     Get the pre-signed S3 URL for the transcript of a specific communication of a conversation
     
     - GET /api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl
     - 
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "url" : "aeiou"
}}]
     
     - parameter conversationId: (path) Conversation ID 
     - parameter communicationId: (path) Communication ID 

     - returns: RequestBuilder<TranscriptUrl> 
     */
    open class func getSpeechandtextanalyticsConversationCommunicationTranscripturlWithRequestBuilder(conversationId: String, communicationId: String) -> RequestBuilder<TranscriptUrl> {
        var path = "/api/v2/speechandtextanalytics/conversations/{conversationId}/communications/{communicationId}/transcripturl"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let communicationIdPreEscape = "\(communicationId)"
        let communicationIdPostEscape = communicationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{communicationId}", with: communicationIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        
        
            
            
        let body: Data? = nil
            
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TranscriptUrl>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

}
