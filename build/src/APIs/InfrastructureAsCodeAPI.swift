//
// InfrastructureAsCodeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class InfrastructureAsCodeAPI {
    
    
    /**
     Get job status and results
     
     - parameter jobId: (path) Job ID 
     - parameter details: (query) Include details of execution, including job results or error information (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getInfrastructureascodeJob(jobId: String, details: Bool? = nil, completion: @escaping ((_ data: InfrastructureascodeJob?,_ error: Error?) -> Void)) {
        let requestBuilder = getInfrastructureascodeJobWithRequestBuilder(jobId: jobId, details: details)
        requestBuilder.execute { (response: Response<InfrastructureascodeJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get job status and results
     - GET /api/v2/infrastructureascode/jobs/{jobId}
     - Get the execution status of a submitted job, optionally including results and error details.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "dryRun" : true,
  "selfUri" : "https://openapi-generator.tech",
  "errorInfo" : "{}",
  "id" : "id",
  "results" : "results",
  "dateSubmitted" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Created"
}, statusCode=200}]
     
     - parameter jobId: (path) Job ID 
     - parameter details: (query) Include details of execution, including job results or error information (optional)

     - returns: RequestBuilder<InfrastructureascodeJob> 
     */
    open class func getInfrastructureascodeJobWithRequestBuilder(jobId: String, details: Bool? = nil) -> RequestBuilder<InfrastructureascodeJob> {        
        var path = "/api/v2/infrastructureascode/jobs/{jobId}"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "details": details
        ])

        let requestBuilder: RequestBuilder<InfrastructureascodeJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    
    
    public enum SortBy_getInfrastructureascodeJobs: String { 
        case _id = "id"
        case datesubmitted = "dateSubmitted"
        case submittedby = "submittedBy"
        case status = "status"
    }

    
    
    public enum SortOrder_getInfrastructureascodeJobs: String { 
        case asc = "asc"
        case desc = "desc"
    }

    
    /**
     Get job history
     
     - parameter maxResults: (query) Number of jobs to show (optional)
     - parameter includeErrors: (query) Include error messages (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getInfrastructureascodeJobs(maxResults: Int? = nil, includeErrors: Bool? = nil, sortBy: SortBy_getInfrastructureascodeJobs? = nil, sortOrder: SortOrder_getInfrastructureascodeJobs? = nil, completion: @escaping ((_ data: InfrastructureascodeJob?,_ error: Error?) -> Void)) {
        let requestBuilder = getInfrastructureascodeJobsWithRequestBuilder(maxResults: maxResults, includeErrors: includeErrors, sortBy: sortBy, sortOrder: sortOrder)
        requestBuilder.execute { (response: Response<InfrastructureascodeJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get job history
     - GET /api/v2/infrastructureascode/jobs
     - Get a history of submitted jobs, optionally including error messages.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "dryRun" : true,
  "selfUri" : "https://openapi-generator.tech",
  "errorInfo" : "{}",
  "id" : "id",
  "results" : "results",
  "dateSubmitted" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Created"
}, statusCode=200}]
     
     - parameter maxResults: (query) Number of jobs to show (optional)
     - parameter includeErrors: (query) Include error messages (optional)
     - parameter sortBy: (query) Sort by (optional)
     - parameter sortOrder: (query) Sort order (optional)

     - returns: RequestBuilder<InfrastructureascodeJob> 
     */
    open class func getInfrastructureascodeJobsWithRequestBuilder(maxResults: Int? = nil, includeErrors: Bool? = nil, sortBy: SortBy_getInfrastructureascodeJobs? = nil, sortOrder: SortOrder_getInfrastructureascodeJobs? = nil) -> RequestBuilder<InfrastructureascodeJob> {        
        let path = "/api/v2/infrastructureascode/jobs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "maxResults": maxResults?.encodeToJSON(), 
            "includeErrors": includeErrors, 
            "sortBy": sortBy?.rawValue, 
            "sortOrder": sortOrder?.rawValue
        ])

        let requestBuilder: RequestBuilder<InfrastructureascodeJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: url!, body: body)
    }

    
    /**
     Create a Job
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postInfrastructureascodeJobs(body: AcceleratorInput, completion: @escaping ((_ data: InfrastructureascodeJob?,_ error: Error?) -> Void)) {
        let requestBuilder = postInfrastructureascodeJobsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<InfrastructureascodeJob>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a Job
     - POST /api/v2/infrastructureascode/jobs
     - Create and submit a job for remote execution or see job planning results.
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "submittedBy" : "{}",
  "dryRun" : true,
  "selfUri" : "https://openapi-generator.tech",
  "errorInfo" : "{}",
  "id" : "id",
  "results" : "results",
  "dateSubmitted" : "2000-01-23T04:56:07.000+00:00",
  "status" : "Created"
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<InfrastructureascodeJob> 
     */
    open class func postInfrastructureascodeJobsWithRequestBuilder(body: AcceleratorInput) -> RequestBuilder<InfrastructureascodeJob> {        
        let path = "/api/v2/infrastructureascode/jobs"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<InfrastructureascodeJob>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: url!, body: body)
    }

}
