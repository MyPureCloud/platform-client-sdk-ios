//
// AIStudioAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class AIStudioAPI {
    
    
    /**
     Delete a summary setting.
     
     - parameter summarySettingId: (path) Summary setting id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteConversationsSummariesSetting(summarySettingId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = deleteConversationsSummariesSettingWithRequestBuilder(summarySettingId: summarySettingId)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Delete a summary setting.
     - DELETE /api/v2/conversations/summaries/settings/{summarySettingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter summarySettingId: (path) Summary setting id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteConversationsSummariesSettingWithRequestBuilder(summarySettingId: String) -> RequestBuilder<Void> {        
        var path = "/api/v2/conversations/summaries/settings/{summarySettingId}"
        let summarySettingIdPreEscape = "\(summarySettingId)"
        let summarySettingIdPostEscape = summarySettingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{summarySettingId}", with: summarySettingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let requestUrl = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", url: requestUrl!, body: body)
    }

    
    
    /**
     Receive a summary setting.
     
     - parameter summarySettingId: (path) Summary setting id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getConversationsSummariesSetting(summarySettingId: String, completion: @escaping ((_ data: SummarySetting?,_ error: Error?) -> Void)) {
        let requestBuilder = getConversationsSummariesSettingWithRequestBuilder(summarySettingId: summarySettingId)
        requestBuilder.execute { (response: Response<SummarySetting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Receive a summary setting.
     - GET /api/v2/conversations/summaries/settings/{summarySettingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "summaryType" : "Concise",
  "selfUri" : "https://openapi-generator.tech",
  "format" : "TextBlock",
  "language" : "language",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "customEntities" : [ {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  } ],
  "participantLabels" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "maskPII" : "{}",
  "name" : "name",
  "id" : "id",
  "settingType" : "Basic",
  "prompt" : "prompt",
  "predefinedInsights" : [ "ReasonForCall", "ReasonForCall" ]
}, statusCode=200}]
     
     - parameter summarySettingId: (path) Summary setting id 

     - returns: RequestBuilder<SummarySetting> 
     */
    open class func getConversationsSummariesSettingWithRequestBuilder(summarySettingId: String) -> RequestBuilder<SummarySetting> {        
        var path = "/api/v2/conversations/summaries/settings/{summarySettingId}"
        let summarySettingIdPreEscape = "\(summarySettingId)"
        let summarySettingIdPostEscape = summarySettingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{summarySettingId}", with: summarySettingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        let requestUrl = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SummarySetting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: requestUrl!, body: body)
    }

    
    
    
    
    
    public enum SortBy_getConversationsSummariesSettings: String { 
        case datemodified = "dateModified"
        case name = "name"
    }
    
    
    
    public enum SortOrder_getConversationsSummariesSettings: String { 
        case asc = "asc"
        case desc = "desc"
    }
    
    
    
    
    
    
    /**
     Get all summary settings.
     
     - parameter language: (query) Filter by matching language - case insensitive. (optional)
     - parameter name: (query) Filter by partially matching name - case insensitive. (optional)
     - parameter sortBy: (query) Sort by. Default value dateModified. (optional)
     - parameter sortOrder: (query) Sort Order. Default value desc. (optional)
     - parameter pageNumber: (query) Page number. (optional)
     - parameter pageSize: (query) Page size. The maximum page size is 100. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getConversationsSummariesSettings(language: String? = nil, name: String? = nil, sortBy: SortBy_getConversationsSummariesSettings? = nil, sortOrder: SortOrder_getConversationsSummariesSettings? = nil, pageNumber: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: SummarySettingEntityListing?,_ error: Error?) -> Void)) {
        let requestBuilder = getConversationsSummariesSettingsWithRequestBuilder(language: language, name: name, sortBy: sortBy, sortOrder: sortOrder, pageNumber: pageNumber, pageSize: pageSize)
        requestBuilder.execute { (response: Response<SummarySettingEntityListing>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Get all summary settings.
     - GET /api/v2/conversations/summaries/settings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "total" : 1,
  "pageCount" : 5,
  "pageNumber" : 6,
  "entities" : [ {
    "summaryType" : "Concise",
    "selfUri" : "https://openapi-generator.tech",
    "format" : "TextBlock",
    "language" : "language",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "customEntities" : [ {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    } ],
    "participantLabels" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "maskPII" : "{}",
    "name" : "name",
    "id" : "id",
    "settingType" : "Basic",
    "prompt" : "prompt",
    "predefinedInsights" : [ "ReasonForCall", "ReasonForCall" ]
  }, {
    "summaryType" : "Concise",
    "selfUri" : "https://openapi-generator.tech",
    "format" : "TextBlock",
    "language" : "language",
    "dateModified" : "2000-01-23T04:56:07.000+00:00",
    "customEntities" : [ {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    }, {
      "description" : "description",
      "label" : "label"
    } ],
    "participantLabels" : "{}",
    "dateCreated" : "2000-01-23T04:56:07.000+00:00",
    "maskPII" : "{}",
    "name" : "name",
    "id" : "id",
    "settingType" : "Basic",
    "prompt" : "prompt",
    "predefinedInsights" : [ "ReasonForCall", "ReasonForCall" ]
  } ],
  "firstUri" : "https://openapi-generator.tech",
  "selfUri" : "https://openapi-generator.tech",
  "lastUri" : "https://openapi-generator.tech",
  "pageSize" : 0,
  "previousUri" : "https://openapi-generator.tech",
  "nextUri" : "https://openapi-generator.tech"
}, statusCode=200}]
     
     - parameter language: (query) Filter by matching language - case insensitive. (optional)
     - parameter name: (query) Filter by partially matching name - case insensitive. (optional)
     - parameter sortBy: (query) Sort by. Default value dateModified. (optional)
     - parameter sortOrder: (query) Sort Order. Default value desc. (optional)
     - parameter pageNumber: (query) Page number. (optional)
     - parameter pageSize: (query) Page size. The maximum page size is 100. (optional)

     - returns: RequestBuilder<SummarySettingEntityListing> 
     */
    open class func getConversationsSummariesSettingsWithRequestBuilder(language: String? = nil, name: String? = nil, sortBy: SortBy_getConversationsSummariesSettings? = nil, sortOrder: SortOrder_getConversationsSummariesSettings? = nil, pageNumber: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<SummarySettingEntityListing> {        
        let path = "/api/v2/conversations/summaries/settings"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body: Data? = nil
        
        var requestUrl = URLComponents(string: URLString)
        requestUrl?.queryItems = APIHelper.mapValuesToQueryItems([
            "language": language, 
            "name": name, 
            "sortBy": sortBy?.rawValue, 
            "sortOrder": sortOrder?.rawValue, 
            "pageNumber": pageNumber?.encodeToJSON(), 
            "pageSize": pageSize?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<SummarySettingEntityListing>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", url: requestUrl!, body: body)
    }

    
    
    /**
     Trigger summary preview event generation.
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postConversationsSummariesPreview(body: SummarySettingWithTranscript, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        let requestBuilder = postConversationsSummariesPreviewWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<Void>?, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }

    /**
     Trigger summary preview event generation.
     - POST /api/v2/conversations/summaries/preview
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func postConversationsSummariesPreviewWithRequestBuilder(body: SummarySettingWithTranscript) -> RequestBuilder<Void> {        
        let path = "/api/v2/conversations/summaries/preview"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let requestUrl = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: requestUrl!, body: body)
    }

    
    
    /**
     Create a summary setting.
     
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postConversationsSummariesSettings(body: SummarySetting, completion: @escaping ((_ data: SummarySetting?,_ error: Error?) -> Void)) {
        let requestBuilder = postConversationsSummariesSettingsWithRequestBuilder(body: body)
        requestBuilder.execute { (response: Response<SummarySetting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Create a summary setting.
     - POST /api/v2/conversations/summaries/settings
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "summaryType" : "Concise",
  "selfUri" : "https://openapi-generator.tech",
  "format" : "TextBlock",
  "language" : "language",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "customEntities" : [ {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  } ],
  "participantLabels" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "maskPII" : "{}",
  "name" : "name",
  "id" : "id",
  "settingType" : "Basic",
  "prompt" : "prompt",
  "predefinedInsights" : [ "ReasonForCall", "ReasonForCall" ]
}, statusCode=200}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<SummarySetting> 
     */
    open class func postConversationsSummariesSettingsWithRequestBuilder(body: SummarySetting) -> RequestBuilder<SummarySetting> {        
        let path = "/api/v2/conversations/summaries/settings"
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let requestUrl = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SummarySetting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", url: requestUrl!, body: body)
    }

    
    
    
    
    /**
     Update a summary setting.
     
     - parameter summarySettingId: (path) Summary setting id 
     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putConversationsSummariesSetting(summarySettingId: String, body: SummarySetting, completion: @escaping ((_ data: SummarySetting?,_ error: Error?) -> Void)) {
        let requestBuilder = putConversationsSummariesSettingWithRequestBuilder(summarySettingId: summarySettingId, body: body)
        requestBuilder.execute { (response: Response<SummarySetting>?, error) -> Void in
            do {
                if let e = error {
                    completion(nil, e)
                } else if let r = response {
                    try requestBuilder.decode(r)
                    completion(response?.body, error)
                } else {
                    completion(nil, error)
                }
            } catch {
                completion(nil, error)
            }
        }
    }

    /**
     Update a summary setting.
     - PUT /api/v2/conversations/summaries/settings/{summarySettingId}
     - OAuth:
       - type: oauth2
       - name: PureCloud OAuth
     - examples: [{contentType=application/json, example={
  "summaryType" : "Concise",
  "selfUri" : "https://openapi-generator.tech",
  "format" : "TextBlock",
  "language" : "language",
  "dateModified" : "2000-01-23T04:56:07.000+00:00",
  "customEntities" : [ {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  }, {
    "description" : "description",
    "label" : "label"
  } ],
  "participantLabels" : "{}",
  "dateCreated" : "2000-01-23T04:56:07.000+00:00",
  "maskPII" : "{}",
  "name" : "name",
  "id" : "id",
  "settingType" : "Basic",
  "prompt" : "prompt",
  "predefinedInsights" : [ "ReasonForCall", "ReasonForCall" ]
}, statusCode=200}]
     
     - parameter summarySettingId: (path) Summary setting id 
     - parameter body: (body)  

     - returns: RequestBuilder<SummarySetting> 
     */
    open class func putConversationsSummariesSettingWithRequestBuilder(summarySettingId: String, body: SummarySetting) -> RequestBuilder<SummarySetting> {        
        var path = "/api/v2/conversations/summaries/settings/{summarySettingId}"
        let summarySettingIdPreEscape = "\(summarySettingId)"
        let summarySettingIdPostEscape = summarySettingIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{summarySettingId}", with: summarySettingIdPostEscape, options: .literal, range: nil)
        let URLString = PureCloudPlatformClientV2API.basePath + path
        let body = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let requestUrl = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<SummarySetting>.Type = PureCloudPlatformClientV2API.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", url: requestUrl!, body: body)
    }

}
